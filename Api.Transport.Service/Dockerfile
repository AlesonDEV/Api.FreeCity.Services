# Використовуємо офіційний Python образ як базовий
# slim версія менша за розміром
FROM python:3.11-slim

# Встановлюємо змінні середовища
# - PYTHONUNBUFFERED: Забезпечує виведення логів Python без буферизації (важливо для Docker logs)
# - PIP_NO_CACHE_DIR: Вимикає кеш pip, зменшуючи розмір образу
# - PYTHONPATH: Включаємо /app, щоб Python міг знайти наші модулі
ENV PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=on \
    PYTHONPATH=/app

# Встановлюємо робочу директорію всередині контейнера
WORKDIR /app

# Копіюємо файл залежностей
COPY requirements.txt .

# Оновлюємо pip та встановлюємо залежності
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Копіюємо весь код додатку в робочу директорію /app
# (Файли з .dockerignore будуть проігноровані)
COPY .. .

# Відкриваємо порт, на якому буде працювати додаток
# Значення береться з конфігурації (за замовчуванням 8000)
# Ми не можемо тут використати змінну з config.py, тому вказуємо стандартний порт,
# або передаємо його через змінну середовища при запуску uvicorn
EXPOSE 8000

# Команда для запуску додатку при старті контейнера
# Використовуємо APP_HOST та APP_PORT з config.py, якщо вони встановлені як змінні середовища Docker
# За замовчуванням: uvicorn main:app --host 0.0.0.0 --port 8000
# Використовуємо $APP_PORT якщо ця змінна середовища встановлена в контейнері
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "${APP_PORT:-8000}"]